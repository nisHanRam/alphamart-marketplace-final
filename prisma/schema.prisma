generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User Related Models
model User {
  id              String         @id @unique
  email           String         @db.VarChar(50)
  username        String         @db.VarChar(100)
  profileImageUrl String         @db.VarChar(255)
  roles           RolesOnUsers[]
  assets          Asset[]
  createdAt       DateTime       @default(now()) @db.Timestamptz(3)
  updatedAt       DateTime       @updatedAt
}

model Role {
  id    Int            @id @default(autoincrement())
  role  String         @unique
  users RolesOnUsers[]
}

model RolesOnUsers {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId Int
}

// Assets Related Models
model AssetCategory {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  filters     Filter[]
  assets      Asset[]
}

model Filter {
  id            Int            @id @default(autoincrement())
  name          String
  category      AssetCategory  @relation(fields: [categoryId], references: [id])
  categoryId    Int
  filterOptions FilterOption[]
}

model FilterOption {
  id       Int                     @id @default(autoincrement())
  name     String
  filter   Filter                  @relation(fields: [filterId], references: [id])
  filterId Int
  assets   FilterOptionsOnAssets[]
}

model Asset {
  id              Int                     @id @default(autoincrement())
  name            String
  description     String
  user            User                    @relation(fields: [userId], references: [id])
  userId          String
  assetCategory   AssetCategory           @relation(fields: [assetCategoryId], references: [id])
  assetCategoryId Int
  createdAt       DateTime                @default(now()) @db.Timestamptz(3)
  updatedAt       DateTime                @updatedAt
  filterOptions   FilterOptionsOnAssets[]
}

model FilterOptionsOnAssets {
  id             Int          @id @default(autoincrement())
  asset          Asset        @relation(fields: [assetId], references: [id])
  assetId        Int
  filterOption   FilterOption @relation(fields: [filterOptionId], references: [id])
  filterOptionId Int
}
